<?php
/**
 * This file is part of the phpCollab3 package.
 * (c) 2009 Ideato s.r.l. <phpcollab@ideato.it>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * PluginIssue.class.php
 *
 * @package    phpCollab3
 * @subpackage idProjectManagementPlugin Model
 */

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    phpCollab3
 * @author Filippo (p16) De Santis <fd@ideato.it>
 * @subpackage idProjectManagementPlugin Model
 */
abstract class PluginIssue extends BaseIssue
{
  public function setUp()
  {
    parent::setUp();
    $this->addListener(new EventLogDoctrineListener());
  }

  /**
   * magic method that return the a string of the format "#<number> <issue_title>" when an issue is printed
   *
   * @return string
   */
  public function __toString()
  {
    return '#'.$this->id.' '.$this->title;
  }

  /**
   * Cheks if an issue has at least one comment
   *
   * @return boolean
   */
  public function hasComments()
  {
    return (Doctrine::getTable('fdComment')->getQueryForListByModelAndFieldAndValue(get_class($this), 'id', $this->id)->count() > 0);
  }

  public function getTotalLogTime()
  {
    $total_log_time = 0;
    foreach ($this->logtimes as $logtime_entry)
    {
      $total_log_time += $logtime_entry->log_time;
    }
    return $total_log_time;
  }

  public function isLate()
  {
    return (bool)(!is_null($this->ending_date) && $this->ending_date < date('Y-m-d') && !$this->isClosed());
  }

  public function isUpcoming($days = 7)
  {
    return (bool)(!is_null($this->starting_date) && $this->starting_date >= date('Y-m-d') && $this->starting_date <= date('Y-m-d', strtotime('+'.$days.' days')));
  }

  public function isClosed()
  {
    return (bool) ($this->status == 'closed');
  }

}