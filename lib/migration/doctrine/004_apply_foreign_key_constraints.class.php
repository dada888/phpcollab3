<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ApplyForeignKeyConstraints extends Doctrine_Migration
{
	public function up()
	{
    $this->createForeignKey('sf_guard_user_permission', array('local' => 'user_id', 'foreign' => 'id',
                                                              'foreignTable' => 'sf_guard_user',
                                                              'onUpdate' => NULL,
                                                              'onDelete' => 'CASCADE',
                                                              'name' => 'sf_guard_user_permission_user_id'));
    $this->createForeignKey('sf_guard_user_permission', array('local' => 'permission_id',
                                                              'foreign' => 'id',
                                                              'foreignTable' => 'sf_guard_permission',
                                                              'onUpdate' => NULL,
                                                              'onDelete' => 'CASCADE',
                                                              'name' => 'sf_guard_user_permission_permission_id'));
    $this->createForeignKey('sf_guard_group_permission', array('local' => 'group_id',
                                                               'foreign' => 'id',
                                                               'foreignTable' => 'sf_guard_group',
                                                               'onUpdate' => NULL,
                                                               'onDelete' => 'CASCADE',
                                                               'name' => 'sf_guard_group_permission_group_id'));
    $this->createForeignKey('sf_guard_group_permission', array('local' => 'permission_id',
                                                               'foreign' => 'id',
                                                               'foreignTable' => 'sf_guard_permission',
                                                               'onUpdate' => NULL,
                                                               'onDelete' => 'CASCADE',
                                                               'name' => 'sf_guard_group_permission_permission_id'));
    $this->createForeignKey('sf_guard_user_group', array('local' => 'user_id',
                                                         'foreign' => 'id',
                                                         'foreignTable' => 'sf_guard_user',
                                                         'onUpdate' => NULL,
                                                         'onDelete' => 'CASCADE',
                                                         'name' => 'sf_guard_user_group_user_id'));
    $this->createForeignKey('sf_guard_user_group', array('local' => 'group_id',
                                                         'foreign' => 'id',
                                                         'foreignTable' => 'sf_guard_group',
                                                         'onUpdate' => NULL,
                                                         'onDelete' => 'CASCADE',
                                                         'name' => 'sf_guard_user_group_group_id'));
    $this->createForeignKey('sf_guard_remember_key', array('local' => 'user_id',
                                                           'foreign' => 'id',
                                                           'foreignTable' => 'sf_guard_user',
                                                           'onUpdate' => NULL,
                                                           'onDelete' => 'CASCADE',
                                                           'name' => 'sf_guard_remember_key_user_id'));
    $this->createForeignKey('issue_user', array('local' => 'issue_id',
                                                'foreign' => 'id',
                                                'foreignTable' => 'issue',
                                                'onUpdate' => NULL,
                                                'onDelete' => 'CASCADE',
                                                'name' => 'issue_user_issue_id'));
    $this->createForeignKey('issue_user', array('local' => 'profile_id',
                                                'foreign' => 'id',
                                                'foreignTable' => 'profile',
                                                'onUpdate' => NULL,
                                                'onDelete' => 'CASCADE',
                                                'name' => 'issue_user_profile_id'));
    $this->createForeignKey('project_user', array('local' => 'project_id',
                                                  'foreign' => 'id',
                                                  'foreignTable' => 'project',
                                                  'onUpdate' => NULL,
                                                  'onDelete' => 'CASCADE',
                                                  'name' => 'project_user_project_id'));
    $this->createForeignKey('project_user', array('local' => 'profile_id',
                                                  'foreign' => 'id',
                                                  'foreignTable' => 'profile',
                                                  'onUpdate' => NULL,
                                                  'onDelete' => 'CASCADE',
                                                  'name' => 'project_user_profile_id'));
    $this->createForeignKey('associated_issue', array('local' => 'main',
                                                      'foreign' => 'id',
                                                      'foreignTable' => 'issue',
                                                      'onUpdate' => NULL,
                                                      'onDelete' => 'CASCADE',
                                                      'name' => 'associated_issue_main'));
    $this->createForeignKey('associated_issue', array('local' => 'associated_issue',
                                                      'foreign' => 'id',
                                                      'foreignTable' => 'issue',
                                                      'onUpdate' => NULL,
                                                      'onDelete' => 'CASCADE',
                                                      'name' => 'associated_issue_associated_issue'));
    $this->createForeignKey('issue', array('local' => 'project_id',
                                           'foreign' => 'id',
                                           'foreignTable' => 'project',
                                           'onUpdate' => NULL,
                                           'onDelete' => 'CASCADE',
                                           'name' => 'issue_project_id'));
    $this->createForeignKey('issue', array('local' => 'milestone_id',
                                           'foreign' => 'id',
                                           'foreignTable' => 'milestone',
                                           'onUpdate' => NULL,
                                           'onDelete' => 'SET NULL',
                                           'name' => 'issue_milestone_id'));
    $this->createForeignKey('issue', array('local' => 'status_id',
                                           'foreign' => 'id',
                                           'foreignTable' => 'status',
                                           'onUpdate' => NULL,
                                           'onDelete' => 'SET NULL',
                                           'name' => 'issue_status_id'));
    $this->createForeignKey('issue', array('local' => 'priority_id',
                                           'foreign' => 'id',
                                           'foreignTable' => 'priority',
                                           'onUpdate' => NULL,
                                           'onDelete' => 'SET NULL',
                                           'name' => 'issue_priority_id'));
    $this->createForeignKey('milestone', array('local' => 'project_id',
                                               'foreign' => 'id',
                                               'foreignTable' => 'project',
                                               'onUpdate' => NULL,
                                               'onDelete' => 'CASCADE',
                                               'name' => 'milestone_project_id'));
    $this->createForeignKey('comment', array('local' => 'issue_id',
                                             'foreign' => 'id',
                                             'foreignTable' => 'issue',
                                             'onUpdate' => NULL,
                                             'onDelete' => 'CASCADE',
                                             'name' => 'comment_issue_id'));
    $this->createForeignKey('comment', array('local' => 'profile_id',
                                             'foreign' => 'id',
                                             'foreignTable' => 'profile',
                                             'onUpdate' => NULL,
                                             'onDelete' => 'SET NULL',
                                             'name' => 'comment_profile_id'));
    $this->createForeignKey('profile', array('local' => 'sf_guard_user_id',
                                             'foreign' => 'id',
                                             'foreignTable' => 'sf_guard_user',
                                             'onUpdate' => NULL,
                                             'onDelete' => NULL,
                                             'name' => 'profile_sf_guard_user_id'));
		$this->createForeignKey('issue', array('local' => 'tracker_id',
                                           'foreign' => 'id',
                                           'foreignTable' => 'tracker',
                                           'onUpdate' => NULL,
                                           'onDelete' => 'SET NULL',
                                           'name' => 'issue_tracker_id'));

    $this->createForeignKey('projects_trackers', array('local' => 'project_id',
                                                       'foreign' => 'id',
                                                       'foreignTable' => 'project',
                                                       'onUpdate' => NULL,
                                                       'onDelete' => 'CASCADE',
                                                       'name' => 'projects_trackers_project_id'));

    $this->createForeignKey('projects_trackers', array('local' => 'tracker_id',
                                                       'foreign' => 'id',
                                                       'foreignTable' => 'tracker',
                                                       'onUpdate' => NULL,
                                                       'onDelete' => 'CASCADE',
                                                       'name' => 'projects_trackers_tracker_id'));

	}

	public function down()
	{
    $this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_user_id');
		$this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_permission_id');
		$this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_group_id');
		$this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_permission_id');
		$this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_user_id');
		$this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_group_id');
		$this->dropForeignKey('sf_guard_remember_key', 'sf_guard_remember_key_user_id');
		$this->dropForeignKey('issue_user', 'issue_user_issue_id');
		$this->dropForeignKey('issue_user', 'issue_user_profile_id');
		$this->dropForeignKey('project_user', 'project_user_project_id');
		$this->dropForeignKey('project_user', 'project_user_profile_id');
		$this->dropForeignKey('associated_issue', 'associated_issue_main');
		$this->dropForeignKey('associated_issue', 'associated_issue_associated_issue');
		$this->dropForeignKey('issue', 'issue_project_id');
		$this->dropForeignKey('issue', 'issue_milestone_id');
		$this->dropForeignKey('issue', 'issue_status_id');
		$this->dropForeignKey('issue', 'issue_priority_id');
		$this->dropForeignKey('milestone', 'milestone_project_id');
		$this->dropForeignKey('comment', 'comment_issue_id');
		$this->dropForeignKey('comment', 'comment_profile_id');
		$this->dropForeignKey('profile', 'profile_sf_guard_user_id');
		$this->dropForeignKey('issue', 'issue_tracker_id');
		$this->dropForeignKey('projects_trackers', 'projects_trackers_project_id');
		$this->dropForeignKey('projects_trackers', 'projects_trackers_tracker_id');

	}
}