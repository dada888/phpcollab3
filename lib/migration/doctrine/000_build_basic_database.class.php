<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BuildBasicDatabase extends Doctrine_Migration
{
	public function up()
	{
    $this->createTable('sf_guard_user', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 4), 'username' => array('type' => 'string', 'notnull' => true, 'unique' => true, 'length' => 128), 'algorithm' => array('type' => 'string', 'default' => 'sha1', 'notnull' => true, 'length' => 128), 'salt' => array('type' => 'string', 'length' => 128), 'password' => array('type' => 'string', 'length' => 128), 'is_active' => array('type' => 'boolean', 'default' => '1', 'length' => 25), 'is_super_admin' => array('type' => 'boolean', 'default' => 0, 'length' => 25), 'last_login' => array('type' => 'timestamp', 'length' => 25), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array('is_active_idx' =>  array( 'fields' =>  array( 0 => 'is_active',  ), )), 'primary' => array(0 => 'id')));
    $this->createTable('sf_guard_user_permission', array('user_id' => array('type' => 'integer', 'primary' => true, 'length' => 4), 'permission_id' => array('type' => 'integer', 'primary' => true, 'length' => 4), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'user_id', 1 => 'permission_id')));
    $this->createTable('sf_guard_group', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 4), 'name' => array('type' => 'string', 'unique' => true, 'length' => 255), 'description' => array('type' => 'string', 'length' => 1000), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('sf_guard_group_permission', array('group_id' => array('type' => 'integer', 'primary' => true, 'length' => 4), 'permission_id' => array('type' => 'integer', 'primary' => true, 'length' => 4), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'group_id', 1 => 'permission_id')));
    $this->createTable('sf_guard_permission', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 4), 'name' => array('type' => 'string', 'unique' => true, 'length' => 255), 'description' => array('type' => 'string', 'length' => 1000), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('sf_guard_user_group', array('user_id' => array('type' => 'integer', 'primary' => true, 'length' => 4), 'group_id' => array('type' => 'integer', 'primary' => true, 'length' => 4), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'user_id', 1 => 'group_id')));
    $this->createTable('sf_guard_remember_key', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 4), 'user_id' => array('type' => 'integer', 'length' => 4), 'remember_key' => array('type' => 'string', 'length' => 32), 'ip_address' => array('type' => 'string', 'primary' => true, 'length' => 50), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'id', 1 => 'ip_address')));
    $this->createTable('issue_user', array('id' => array('type' => 'integer', 'length' => 20, 'autoincrement' => true, 'primary' => true), 'issue_id' => array('type' => 'integer', 'length' => 2147483647), 'profile_id' => array('type' => 'integer', 'length' => 2147483647)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('project_user', array('id' => array('type' => 'integer', 'length' => 20, 'autoincrement' => true, 'primary' => true), 'project_id' => array('type' => 'integer', 'length' => 2147483647), 'profile_id' => array('type' => 'integer', 'length' => 2147483647)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('associated_issue', array('main' => array('type' => 'integer', 'primary' => true, 'length' => 2147483647), 'associated_issue' => array('type' => 'integer', 'primary' => true, 'length' => 2147483647)), array('indexes' => array(), 'primary' => array(0 => 'main', 1 => 'associated_issue')));
    $this->createTable('status', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 2147483647), 'name' => array('type' => 'string', 'length' => 64), 'status_type' => array('type' => 'string', 'length' => 64), 'position' => array('type' => 'integer', 'length' => 2147483647)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('project', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 2147483647), 'name' => array('type' => 'string', 'notnull' => true, 'length' => 64), 'description' => array('type' => 'string', 'length' => 512), 'is_public' => array('type' => 'boolean', 'default' => 0, 'length' => 25), 'created_at' => array('type' => 'timestamp', 'length' => 25), 'updated_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('issue', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 2147483647), 'project_id' => array('type' => 'integer', 'notnull' => true, 'length' => 2147483647), 'milestone_id' => array('type' => 'integer', 'length' => 2147483647), 'status_id' => array('type' => 'integer', 'length' => 2147483647), 'priority_id' => array('type' => 'integer', 'length' => 2147483647), 'tracker_id' => array('type' => 'integer', 'length' => 2147483647), 'title' => array('type' => 'string', 'notnull' => true, 'length' => 256), 'description' => array('type' => 'string', 'length' => 2000), 'starting_date' => array('type' => 'timestamp', 'length' => 25), 'ending_date' => array('type' => 'timestamp', 'length' => 25), 'estimated_time' => array('type' => 'float', 'length' => 2147483647)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('priority', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 2147483647), 'name' => array('type' => 'string', 'length' => 64), 'position' => array('type' => 'integer', 'length' => 2147483647)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('milestone', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 2147483647), 'title' => array('type' => 'string', 'notnull' => true, 'length' => 64), 'description' => array('type' => 'string', 'length' => 512), 'starting_date' => array('type' => 'timestamp', 'length' => 25), 'ending_date' => array('type' => 'timestamp', 'length' => 25), 'project_id' => array('type' => 'integer', 'notnull' => true, 'length' => 2147483647)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('comment', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 2147483647), 'issue_id' => array('type' => 'integer', 'length' => 2147483647), 'profile_id' => array('type' => 'integer', 'length' => 2147483647), 'body' => array('type' => 'string', 'length' => 1000), 'created_at' => array('type' => 'timestamp', 'length' => 25)), array('indexes' => array(), 'primary' => array(0 => 'id')));
    $this->createTable('profile', array('id' => array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => 2147483647), 'sf_guard_user_id' => array('type' => 'integer', 'length' => 4), 'first_name' => array('type' => 'string', 'length' => 64), 'last_name' => array('type' => 'string', 'length' => 64), 'email' => array('type' => 'string', 'notnull' => true, 'unique' => true, 'length' => 255)), array('indexes' => array(), 'primary' => array(0 => 'id')));
  }

  public function postUp()
  {
    $this->createForeignKey('sf_guard_user_permission', array('local' => 'user_id', 'foreign' => 'id',
        'foreignTable' => 'sf_guard_user', 'onUpdate' => NULL, 'onDelete' => 'CASCADE',
        'name' => 'sf_guard_user_permission_user_id'));
    $this->createForeignKey('sf_guard_user_permission', array('local' => 'permission_id',
        'foreign' => 'id', 'foreignTable' => 'sf_guard_permission', 'onUpdate' => NULL,
        'onDelete' => 'CASCADE', 'name' => 'sf_guard_user_permission_permission_id'));
    $this->createForeignKey('sf_guard_group_permission', array('local' => 'group_id', 'foreign' => 'id',
        'foreignTable' => 'sf_guard_group', 'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'sf_guard_group_permission_group_id'));
    $this->createForeignKey('sf_guard_group_permission', array('local' => 'permission_id', 'foreign' => 'id',
        'foreignTable' => 'sf_guard_permission', 'onUpdate' => NULL, 'onDelete' => 'CASCADE',
        'name' => 'sf_guard_group_permission_permission_id'));
    $this->createForeignKey('sf_guard_user_group', array('local' => 'user_id', 'foreign' => 'id', 'foreignTable' => 'sf_guard_user',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'sf_guard_user_group_user_id'));
    $this->createForeignKey('sf_guard_user_group', array('local' => 'group_id', 'foreign' => 'id', 'foreignTable' => 'sf_guard_group',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'sf_guard_user_group_group_id'));
    $this->createForeignKey('sf_guard_remember_key', array('local' => 'user_id', 'foreign' => 'id',
        'foreignTable' => 'sf_guard_user', 'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'sf_guard_remember_key_user_id'));
    $this->createForeignKey('issue_user', array('local' => 'issue_id', 'foreign' => 'id', 'foreignTable' => 'issue',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'issue_user_issue_id'));
    $this->createForeignKey('issue_user', array('local' => 'profile_id', 'foreign' => 'id', 'foreignTable' => 'profile',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'issue_user_profile_id'));
    $this->createForeignKey('project_user', array('local' => 'project_id', 'foreign' => 'id',
        'foreignTable' => 'project', 'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'project_user_project_id'));
    $this->createForeignKey('project_user', array('local' => 'profile_id', 'foreign' => 'id', 'foreignTable' => 'profile',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'project_user_profile_id'));
    $this->createForeignKey('associated_issue', array('local' => 'main', 'foreign' => 'id', 'foreignTable' => 'issue',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'associated_issue_main'));
    $this->createForeignKey('associated_issue', array('local' => 'associated_issue', 'foreign' => 'id',
        'foreignTable' => 'issue', 'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'associated_issue_associated_issue'));
    $this->createForeignKey('issue', array('local' => 'project_id', 'foreign' => 'id', 'foreignTable' => 'project',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'issue_project_id'));
    $this->createForeignKey('issue', array('local' => 'milestone_id', 'foreign' => 'id', 'foreignTable' => 'milestone',
        'onUpdate' => NULL, 'onDelete' => 'SET NULL', 'name' => 'issue_milestone_id'));
    $this->createForeignKey('issue', array('local' => 'status_id', 'foreign' => 'id', 'foreignTable' => 'status',
        'onUpdate' => NULL, 'onDelete' => 'SET NULL', 'name' => 'issue_status_id'));
    $this->createForeignKey('issue', array('local' => 'priority_id', 'foreign' => 'id', 'foreignTable' => 'priority',
        'onUpdate' => NULL, 'onDelete' => 'SET NULL', 'name' => 'issue_priority_id'));
    $this->createForeignKey('milestone', array('local' => 'project_id', 'foreign' => 'id', 'foreignTable' => 'project',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'milestone_project_id'));
    $this->createForeignKey('comment', array('local' => 'issue_id', 'foreign' => 'id', 'foreignTable' => 'issue',
        'onUpdate' => NULL, 'onDelete' => 'CASCADE', 'name' => 'comment_issue_id'));
    $this->createForeignKey('comment', array('local' => 'profile_id', 'foreign' => 'id', 'foreignTable' => 'profile', 'onUpdate' => NULL,
        'onDelete' => 'SET NULL', 'name' => 'comment_profile_id'));
    $this->createForeignKey('profile', array('local' => 'sf_guard_user_id', 'foreign' => 'id',
        'foreignTable' => 'sf_guard_user', 'onUpdate' => NULL, 'onDelete' => NULL, 'name' => 'profile_sf_guard_user_id'));
  }

  public function preDown()
  {
    $this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_user_id');
		$this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_permission_id');
		$this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_group_id');
		$this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_permission_id');
		$this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_user_id');
		$this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_group_id');
		$this->dropForeignKey('sf_guard_remember_key', 'sf_guard_remember_key_user_id');
		$this->dropForeignKey('issue_user', 'issue_user_issue_id');
		$this->dropForeignKey('issue_user', 'issue_user_profile_id');
		$this->dropForeignKey('project_user', 'project_user_project_id');
		$this->dropForeignKey('project_user', 'project_user_profile_id');
		$this->dropForeignKey('associated_issue', 'associated_issue_main');
		$this->dropForeignKey('associated_issue', 'associated_issue_associated_issue');
		$this->dropForeignKey('issue', 'issue_project_id');
		$this->dropForeignKey('issue', 'issue_milestone_id');
		$this->dropForeignKey('issue', 'issue_status_id');
		$this->dropForeignKey('issue', 'issue_priority_id');
		$this->dropForeignKey('milestone', 'milestone_project_id');
		$this->dropForeignKey('comment', 'comment_issue_id');
		$this->dropForeignKey('comment', 'comment_profile_id');
		$this->dropForeignKey('profile', 'profile_sf_guard_user_id');
  }

	public function down()
	{
    $this->dropTable('sf_guard_user');
    $this->dropTable('sf_guard_user_permission');
    $this->dropTable('sf_guard_group');
    $this->dropTable('sf_guard_group_permission');
    $this->dropTable('sf_guard_permission');
    $this->dropTable('sf_guard_user_group');
    $this->dropTable('sf_guard_remember_key');
    $this->dropTable('issue_user');
    $this->dropTable('project_user');
    $this->dropTable('associated_issue');
    $this->dropTable('status');
    $this->dropTable('project');
    $this->dropTable('issue');
    $this->dropTable('priority');
    $this->dropTable('milestone');
    $this->dropTable('comment');
    $this->dropTable('profile');
	}
}